# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  android: circleci/android@1.0.3

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    parameters:
      runKapt:
        type: boolean
        default: true
    # These next lines define the Android machine image executor: https://circleci.com/docs/2.0/executor-types/
    executor:
      name: android/android-machine
      resource-class: xlarge

    steps:
      # Checkout the code as the first step.
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache

      # Start the emulator and run the Instrumentation tests
      - android/start-emulator-and-run-tests:
          wait-for-emulator: false
          test-command: ./gradlew connectedDebugAndroidTest -DrunKapt=<< parameters.runKapt >>
          system-image: system-images;android-29;default;x86
          save-gradle-cache: false
          pre-run-tests-steps:
            - run: ./gradlew assembleDebugAndroidTest compileDebugUnitTestSources -DrunKapt=<< parameters.runKapt >>
            - android/wait-for-emulator

      # Run unit tests
      - android/run-tests:
          test-command: ./gradlew testDebug --continue

      - android/save-gradle-cache
      - android/save-build-cache


workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  dagger-sample-app:
    jobs:
      - build-and-test
      - build-and-test:
          runKapt: false
